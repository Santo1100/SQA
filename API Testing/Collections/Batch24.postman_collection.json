{
	"info": {
		"_postman_id": "1802bb4b-c7b3-43e0-adc0-9b69936415ae",
		"name": "Batch24",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "19220781"
	},
	"item": [
		{
			"name": "create booking",
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"var firstName= pm.variables.replaceIn('{{$randomFirstName}}') \r",
							"pm.environment.set(\"firstName\", firstName)\r",
							"\r",
							"var lastName= pm.variables.replaceIn('{{$randomLastName}}') \r",
							"pm.environment.set(\"lastName\", lastName)\r",
							"\r",
							"var totalPrice= pm.variables.replaceIn(\"{{$randomInt}}\")\r",
							"pm.environment.set(\"totalprice\", totalPrice)\r",
							"var depositPaid= pm.variables.replaceIn(\"{{$randomBoolean}}\")\r",
							"pm.environment.set(\"depositpaid\",depositPaid)\r",
							"\r",
							"//console.log(firstName)\r",
							"//console.log(lastName)\r",
							"\r",
							"//date\r",
							"const date= require(\"moment\")\r",
							"const today=date()\r",
							"//var checkinpast= today.subtract(5, \"d\").format(\"DD-MM-YYYY\") //for past date\r",
							"\r",
							"var checkin= today.format(\"YYYY-MM-DD\") //for future date\r",
							"pm.environment.set(\"checkin\", checkin)\r",
							"console.log(checkin)\r",
							"\r",
							"var checkout= today.add(7, \"d\").format(\"YYYY-MM-DD\") //for future date\r",
							"pm.environment.set(\"checkout\", checkout)\r",
							"console.log(checkout)\r",
							"\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData = pm.response.json()\r",
							"pm.environment.set(\"id\",jsonData.bookingid)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"{{firstName}}\",\r\n\t\"lastname\" : \"{{lastName}}\",\r\n\t\"totalprice\" : {{totalprice}},\r\n\t\"depositpaid\" : {{depositpaid}},\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"{{checkin}}\",\r\n    \t\"checkout\" : \"{{checkout}}\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						""
					]
				}
			},
			"response": []
		},
		{
			"name": "Get booking",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsonData= pm.response.json()\r",
							"pm.test(\"first name validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"firstName\")).to.eql(jsonData.firstname); //Fixed accessing json data using response.text()\r",
							"})\r",
							"\r",
							"pm.test(\"last name validation\", function(){ \r",
							"    pm.expect(pm.environment.get(\"lastName\")).to.eql(jsonData.lastname); \r",
							"})\r",
							"\r",
							"pm.test(\"checkin date validation\", function(){\r",
							"    pm.expect(pm.environment.get(\"checkin\")).to.eql(jsonData.bookingdates.checkin); \r",
							"})\r",
							"pm.test(\"checkout date validation\", function(){\r",
							"    pm.expect(pm.environment.add(7,d).get(\"checkout\")).to.eql(jsonData.bookingdates.checkout); \r",
							"})\r",
							"\r",
							"pm.test(\"total price validation\",function(){  \r",
							"  pm.expect(pm.environment.get(\"totalprice\")).to.eql(jsonData.totalprice.toString()); \r",
							"})\r",
							"\r",
							"pm.test(\"deposit paid validation\",function(){ //Changed the test name to 'deposit paid validation'\r",
							"    pm.expect(pm.environment.get(\"depositpaid\")).to.eql(jsonData.depositpaid.toString()); \r",
							"})\r",
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							""
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/{{id}}",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"{{id}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "Access req",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var jsondata = pm.response.json()\r",
							"\r",
							"pm.environment.set(\"token\", jsondata.token)"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"username\": \"admin\",\r\n\t\"password\": \"password123\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/auth",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"auth"
					]
				}
			},
			"response": []
		},
		{
			"name": "Update booking",
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n\t\"firstname\" : \"James\",\r\n\t\"lastname\" : \"Brown\",\r\n\t\"totalprice\" : 111,\r\n\t\"depositpaid\" : true,\r\n\t\"bookingdates\" : {\r\n    \t\"checkin\" : \"2018-01-01\",\r\n    \t\"checkout\" : \"2019-01-01\"\r\n\t},\r\n\t\"additionalneeds\" : \"Breakfast\"\r\n}\r\n",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "{{baseurl}}/booking/749",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"749"
					]
				}
			},
			"response": []
		},
		{
			"name": "Delete booking",
			"request": {
				"method": "DELETE",
				"header": [
					{
						"key": "Cookie",
						"value": "token={{token}}",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{baseurl}}/booking/749",
					"host": [
						"{{baseurl}}"
					],
					"path": [
						"booking",
						"749"
					]
				}
			},
			"response": []
		}
	]
}